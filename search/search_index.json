{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Cattlechain 4.0 Introduction Cattlechain 4.0, a disruptive supply chain solution to increase farm productivity and sustainability while promoting animal welfare, focused on overcoming various EU livestock sector challenges and to democratize the access to smart technologies by livestock. The solution implements a complete monitoring solution for cattle based on IoT wearables, Artificial Intelligence (AI) algorithms, FIWARE, Sentinel satellite imagery, and blockchain technologies. In this proposal, we are only designing and developing an architecture for blockchain implementation. In this system, blockchain technology is used to assure full traceability and transparency along the whole supply chain. Data coming from the IoT sensors are directly stored (without human intervention) and made available for traceability and certification purposes, and it is integrated with FIWARE technologies to generate an Open Platform, where consumers and public authorities can consult the information about the meat and dairy supply chain through data market places, management apps, and tracking modules. The system also implements an Blockchain assured Animal Welfare Indicator that ensures that the meat and dairy products comply with the highest animal welfare standards without the need to involve a certification body. The seal granted process relies on the automatic evaluation of the data provided by the IoT devices whose truthfulness is guaranteed by the blockchain. This information is available for public authorities, retailers, and consumers. At the same time, the Animal Welfare Seal increases consumers\u2019 acceptance of products carrying it, increasing companies and farmers\u2019 willingness to use our system.","title":"Home"},{"location":"index.html#cattlechain-40","text":"","title":"Cattlechain 4.0"},{"location":"index.html#introduction","text":"Cattlechain 4.0, a disruptive supply chain solution to increase farm productivity and sustainability while promoting animal welfare, focused on overcoming various EU livestock sector challenges and to democratize the access to smart technologies by livestock. The solution implements a complete monitoring solution for cattle based on IoT wearables, Artificial Intelligence (AI) algorithms, FIWARE, Sentinel satellite imagery, and blockchain technologies. In this proposal, we are only designing and developing an architecture for blockchain implementation. In this system, blockchain technology is used to assure full traceability and transparency along the whole supply chain. Data coming from the IoT sensors are directly stored (without human intervention) and made available for traceability and certification purposes, and it is integrated with FIWARE technologies to generate an Open Platform, where consumers and public authorities can consult the information about the meat and dairy supply chain through data market places, management apps, and tracking modules. The system also implements an Blockchain assured Animal Welfare Indicator that ensures that the meat and dairy products comply with the highest animal welfare standards without the need to involve a certification body. The seal granted process relies on the automatic evaluation of the data provided by the IoT devices whose truthfulness is guaranteed by the blockchain. This information is available for public authorities, retailers, and consumers. At the same time, the Animal Welfare Seal increases consumers\u2019 acceptance of products carrying it, increasing companies and farmers\u2019 willingness to use our system.","title":"Introduction"},{"location":"architecture.html","text":"Cattlechain Architecture CattleChain core platform is consist of various FIWARE Generic Enablers. Figure present the architecture of the CattleChain platform. Generic Enablers A Context Broker Generic Enabler is the core and mandatory component of any \u201cPowered by FIWARE\u201d platform or solution. It enables to manage context information in a highly decentralized and large-scale manner. In the CattleChain Project there are the generic enablers has been used: KeyRock Keyrock is the FIWARE component responsible for Identity Management. Using Keyrock (in conjunction with other security components such as PEP Proxy and Authzforce) enables you to add OAuth2-based authentication and authorization security to your services and applications. The main identity management concepts within Keyrock are: Users: Have a registered account in Keyrock. Can manage organizations and register applications. Organizations: Are group of users that share resources of an application (roles and permissions). Users can be members or owners (manage the organization). Applications: has the client role in the OAuth 2.0 architecture and will request protected user data. Are able to authenticate users using their Oauth credentials (ID and secret) which unequivocally identify the application Define roles and permissions to manage authorization of users and organizations Can register Pep Proxy to protect backends. Can register IoT Agents. Keyrock provides both a GUI and an API interface. to know more about keyrock please follow keyrock documentation . PEP Proxy- Wilma Wilma is a PEP Proxy - it can be combined with other security components such as Keyrock and Authzforce to enforce access control to your backend applications. This means that only permitted users will be able to access your Generic Enablers or REST services. Identity Management allows you to manage specific permissions and policies to resources allowing different access levels for your users. to know more about wilma please follow Wilma documentation . important: to enable the Canis Major integration please use the fork version of PEP Proxy source code can be found in FIWARE-BLOCKCHAIN github Orion-LD (Core) Orion-LD is an alternative NGSI-LD Context Broker written in C/C++. It is a standalone executable and therefore small, fast, lightweight and easy to handle. Context brokers allow for the management and requesting context of information in a structured manner based on linked data standards following the NGSI-LD specification. Orion-LD is more suitable for smaller installations or possibly in embedded environments - it currentlys supports only a subset of the standard NGSI-LD endpoints. Documentation Quantumleap QuantumLeap is a REST service for storing, querying and retrieving NGSI v2 and NGSI-LD (experimental support) spatial-temporal data. QuantumLeap converts NGSI semi-structured data into tabular format and stores it in a time-series database, associating each database record with a time index and, if present in the NGSI data, a location on Earth. REST clients can then retrieve NGSI entities by filtering entity sets through time ranges and spatial operators. Note that, from the client's stand point, these queries are defined on NGSI entities as opposed to database tables. However, the query functionality available through the REST interface is quite basic and most complex queries typically require clients to use the database directly. Documentation Cosmos The Cosmos BigData Analysis GE is a set of tools that help achieving the tasks of Streaming and Batch processing over context data. Documentation Cosmos ORION-SPARK Connector: The Cosmos Generic Enabler enables easier BigData analysis over context, integrated with some of the most popular BigData platforms. Documentation CanisMajor - Blockchain Adaptor Under Development CanisMajor is a blockchain adaptor that supports various DLTs, the adaptor aims to submit the data to DLT and works with NGSI-LD and NGSI-V2 as well. CanisMajor Adaptor recommend using AEI contract Model for the Ethereum Clients. AEI (Asset,Event, Identity) Smart Contract is written in Solidity using ERC721 standard (NFT). to know more about CanisMajor please follow CanisMajor documentation . Canis Major recommend to use the AEI Contract Model . AEI Smart Contract is written in Solidity using ERC721 standard (NFT) and can be use with Ethereum Clients. It is compatible with FIWARE-Canis Major Adaptor to store the data in blockchain. AEI, asset, events (metadata), relationship, is designed to store the NGSI-LD model with the help of Canis Major Adaptor. Taurus - LedgerSync Under Development Taurus is a blockchain listener that supports various DLT, and the listener aims to listen to Blockchain Events and store data in FIWARE. This component compliments FIWARE as an OffChainDB. Link .","title":"Architecture"},{"location":"architecture.html#cattlechain-architecture","text":"CattleChain core platform is consist of various FIWARE Generic Enablers. Figure present the architecture of the CattleChain platform.","title":"Cattlechain Architecture"},{"location":"architecture.html#generic-enablers","text":"A Context Broker Generic Enabler is the core and mandatory component of any \u201cPowered by FIWARE\u201d platform or solution. It enables to manage context information in a highly decentralized and large-scale manner. In the CattleChain Project there are the generic enablers has been used:","title":"Generic Enablers"},{"location":"architecture.html#keyrock","text":"Keyrock is the FIWARE component responsible for Identity Management. Using Keyrock (in conjunction with other security components such as PEP Proxy and Authzforce) enables you to add OAuth2-based authentication and authorization security to your services and applications. The main identity management concepts within Keyrock are: Users: Have a registered account in Keyrock. Can manage organizations and register applications. Organizations: Are group of users that share resources of an application (roles and permissions). Users can be members or owners (manage the organization). Applications: has the client role in the OAuth 2.0 architecture and will request protected user data. Are able to authenticate users using their Oauth credentials (ID and secret) which unequivocally identify the application Define roles and permissions to manage authorization of users and organizations Can register Pep Proxy to protect backends. Can register IoT Agents. Keyrock provides both a GUI and an API interface. to know more about keyrock please follow keyrock documentation .","title":"KeyRock"},{"location":"architecture.html#pep-proxy-wilma","text":"Wilma is a PEP Proxy - it can be combined with other security components such as Keyrock and Authzforce to enforce access control to your backend applications. This means that only permitted users will be able to access your Generic Enablers or REST services. Identity Management allows you to manage specific permissions and policies to resources allowing different access levels for your users. to know more about wilma please follow Wilma documentation . important: to enable the Canis Major integration please use the fork version of PEP Proxy source code can be found in FIWARE-BLOCKCHAIN github","title":"PEP Proxy- Wilma"},{"location":"architecture.html#orion-ld-core","text":"Orion-LD is an alternative NGSI-LD Context Broker written in C/C++. It is a standalone executable and therefore small, fast, lightweight and easy to handle. Context brokers allow for the management and requesting context of information in a structured manner based on linked data standards following the NGSI-LD specification. Orion-LD is more suitable for smaller installations or possibly in embedded environments - it currentlys supports only a subset of the standard NGSI-LD endpoints. Documentation","title":"Orion-LD (Core)"},{"location":"architecture.html#quantumleap","text":"QuantumLeap is a REST service for storing, querying and retrieving NGSI v2 and NGSI-LD (experimental support) spatial-temporal data. QuantumLeap converts NGSI semi-structured data into tabular format and stores it in a time-series database, associating each database record with a time index and, if present in the NGSI data, a location on Earth. REST clients can then retrieve NGSI entities by filtering entity sets through time ranges and spatial operators. Note that, from the client's stand point, these queries are defined on NGSI entities as opposed to database tables. However, the query functionality available through the REST interface is quite basic and most complex queries typically require clients to use the database directly. Documentation","title":"Quantumleap"},{"location":"architecture.html#cosmos","text":"The Cosmos BigData Analysis GE is a set of tools that help achieving the tasks of Streaming and Batch processing over context data. Documentation","title":"Cosmos"},{"location":"architecture.html#cosmos-orion-spark-connector","text":"The Cosmos Generic Enabler enables easier BigData analysis over context, integrated with some of the most popular BigData platforms. Documentation","title":"Cosmos ORION-SPARK Connector:"},{"location":"architecture.html#canismajor-blockchain-adaptor","text":"Under Development CanisMajor is a blockchain adaptor that supports various DLTs, the adaptor aims to submit the data to DLT and works with NGSI-LD and NGSI-V2 as well. CanisMajor Adaptor recommend using AEI contract Model for the Ethereum Clients. AEI (Asset,Event, Identity) Smart Contract is written in Solidity using ERC721 standard (NFT). to know more about CanisMajor please follow CanisMajor documentation . Canis Major recommend to use the AEI Contract Model . AEI Smart Contract is written in Solidity using ERC721 standard (NFT) and can be use with Ethereum Clients. It is compatible with FIWARE-Canis Major Adaptor to store the data in blockchain. AEI, asset, events (metadata), relationship, is designed to store the NGSI-LD model with the help of Canis Major Adaptor.","title":"CanisMajor - Blockchain Adaptor"},{"location":"architecture.html#taurus-ledgersync","text":"Under Development Taurus is a blockchain listener that supports various DLT, and the listener aims to listen to Blockchain Events and store data in FIWARE. This component compliments FIWARE as an OffChainDB. Link .","title":"Taurus - LedgerSync"},{"location":"blockchain_operations.html","text":"Blockchain Operations","title":"Blockchain Operations"},{"location":"blockchain_operations.html#blockchain-operations","text":"","title":"Blockchain Operations"},{"location":"changelog.html","text":"Changelog","title":"Changelog"},{"location":"changelog.html#changelog","text":"","title":"Changelog"},{"location":"datamodel.html","text":"Data Model","title":"Data Models"},{"location":"datamodel.html#data-model","text":"","title":"Data Model"},{"location":"environment.html","text":"Test Environment Production Environment","title":"Environment"},{"location":"environment.html#test-environment","text":"","title":"Test Environment"},{"location":"environment.html#production-environment","text":"","title":"Production Environment"},{"location":"evaluation.html","text":"Evaluation","title":"Evaluation"},{"location":"evaluation.html#evaluation","text":"","title":"Evaluation"},{"location":"future_work.html","text":"Future Work","title":"Future Work"},{"location":"future_work.html#future-work","text":"","title":"Future Work"},{"location":"ml_operations.html","text":"Machine Learning Operations To be done by Sensowave.","title":"ML/AI Operations"},{"location":"ml_operations.html#machine-learning-operations","text":"To be done by Sensowave.","title":"Machine Learning Operations"},{"location":"usages.html","text":"Platform Usage Creating an entity e.g. Creating data e.g. Creation of IOT Device e.g. Submitting IoT Data e.g. Updating data in Context Broker","title":"Usage"},{"location":"usages.html#platform-usage","text":"","title":"Platform Usage"},{"location":"usages.html#creating-an-entity","text":"e.g. Creating data e.g. Creation of IOT Device e.g. Submitting IoT Data e.g. Updating data in Context Broker","title":"Creating an entity"}]}